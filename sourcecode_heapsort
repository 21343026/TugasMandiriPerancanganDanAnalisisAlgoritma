// Heap Sort in Java
  
public class heapsort {
  
    public void sort(int arr[]) {
      int n = arr.length;
  
      // max heap
      for (int i = n / 2 - 1; i >= 0; i--) {
        heapify(arr, n, i);
      }
  
      // Heap sort
      for (int i = n - 1; i >= 0; i--) {
        int temp = arr[0];
        arr[0] = arr[i];
        arr[i] = temp;
  
        // Heapify element root
        heapify(arr, i, 0);
      }
    }
  
    void heapify(int arr[], int n, int i) {
      // menemukan yang angka yang paling besar,dari kiri ke kanan 
      int largest = i;
      int l = 2 * i + 1;
      int r = 2 * i + 2;
  
      if (l < n && arr[l] > arr[largest])
        largest = l;
  
      if (r < n && arr[r] > arr[largest])
        largest = r;
  
      // tukar dan lanjutkan heapifying jika root tidak dari yang terbesar 
      if (largest != i) {
        int swap = arr[i];
        arr[i] = arr[largest];
        arr[largest] = swap;
  
        heapify(arr, n, largest);
      }
    }
  
    // berfungsi untuk print array 
    static void printArray(int arr[]) {
      int n = arr.length;
      for (int i = 0; i < n; ++i)
        System.out.print(arr[i] + " ");
      System.out.println();
    }
  
    // Driver code
    public static void main(String args[]) {
      int arr[] = { 4, 1, 3, 2, 16, 9, 10, 14, 8, 7 };
  
      heapsort hs = new heapsort();
      hs.sort(arr);
  
      System.out.println("urutan array adalah :");
      printArray(arr);
    }
  }
